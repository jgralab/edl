module ExecuteMethodTest
schema de.uni_koblenz.edl.preprocessor.schema.EDLSchema
user code{
	public boolean isTrue(){
		return (Boolean) #{return #{return true;}#;}#;
	}
	
	{
		System.out.println(#{return "Hello world!";}#);
	}
}
exports
	sorts A B C D
	
	lexical start-symbols A #$=3;#
	
	context-free start-symbols C #$=2;#
	
	context-free syntax
		rule #$=1;# -> C #$=2;#
		rule #$=1;# [a] #$=2;# ? #$=3;# -> C #$=4;#
		rule #$=1;# (#$=1;# [a] #$=2;#) ? #$=3;# -> A #$=4;#
		rule #$=1;# (#$=2;#) #$=3;# -> C #$=4;#
		rule #$=1;# ( #$=2;# ( #$=3;# ) #$=4;# ) #$=5;# -> D #$=6;#
		rule #$=1;# ( #$=2;# [b] #$=3;# ) #$=4;# -> C #$=5;#
		rule #$=1;# ( #$=2;# ( #$=3;# [b] #$=4;# ) #$=5;# ) #$=6;# -> D #$=7;#
		rule #$=1;# ( #$=2;# [c] #$=3;# [d] #$=4;# ) #$=5;# -> C #$=6;#
		rule #$=1;# [e] #$=2;# * #$=3;# -> C #$=4;#
		rule #$=1;# (#$=1;# [e] #$=2;#) * #$=3;# -> A #$=4;#
		rule #$=1;# [f] #$=2;# + #$=3;# -> C #$=4;#
		rule #$=1;# (#$=1;# [f] #$=2;#) + #$=3;# -> A #$=4;#
		rule #$=1;# { #$=2;# (#$=3;# [g] #$=4;# "a" #$=5;#) #$=6;# ( #$=7;# [h] #$=8;# "b" #$=9;#) #$=10;# }* #$=11;# -> C #$=12;#
		rule #$=1;# { #$=2;# [g] #$=3;# (#$=4;# [h] #$=5;#) }+ #$=6;# -> C #$=7;#
		rule #$=1;# { #$=2;# [g] #$=3;# [h] #$=4;# }* #$=5;# -> C #$=6;#
		rule #$=1;# { #$=2;# [i] #$=3;# [j] #$=4;# }+ #$=5;# -> C #$=6;#
		rule #$=1;# [k] #$=2;# | #$=3;# [l] #$=4;# -> C #$=5;#
		rule #$=1;# (#$=2;# [k] #$=3;#) | (#$=4;# [l] #$=5;#) #$=6;# -> A #$=7;#
		rule #$=1;# [m] #$=2;# | #$=3;# [n] #$=4;# | #$=5;# [o] #$=6;#	-> C #$=7;#
		rule #$=1;# ( #$=2;# [m] #$=3;# ) #$=4;# | #$=5;# ( #$=6;# [n] #$=7;#) #$=8;# | #$=9;# ( #$=10;# [o] #$=11;# ) #$=12;# -> A #$=13;#
		rule #$=1;# < #$=2;# [p] #$=3;# , #$=4;# [q] #$=5;# > #$=6;# -> C #$=7;#
		rule #$=1;# < #$=2;# [r] #$=3;# , #$=4;# [s] #$=5;# , #$=6;# [t] #$=7;# > #$=8;# -> C #$=9;#
		rule #$=1;# ( #$=2;# #$=3;# => [u]) #$=6;# -> C #$=7;#
		rule #$=1;# ( #$=2;# [v] #$=3;# => [w]) #$=6;# -> C #$=7;#
		rule #$=1;# ( #$=2;# [x] #$=3;# [y] #$=6;# => [z]) #$=7;# -> C #$=8;#
		rule #$=1;# ([A] -> [B]) #$=2;# -> C #$=3;#
		rule #$=1;# func1 #$=2;# ( #$=3;# ) #$=4;# -> C #$=5;#
		rule #$=1;# func2 #$=2;# ( #$=3;# [C] #$=4;# ) #$=5;# -> C #$=6;#
		rule #$=1;# func3 #$=2;# ( #$=3;# [D] #$=4;# , #$=5;# [E] #$=6;# ) #$=7;# -> C #$=8;#
	
	lexical syntax
		rule #$=1;# -> C #$=2;#
		rule #$=1;# [a] #$=2;# ? #$=3;# -> C #$=4;#
		rule #$=1;# (#$=1;# [a] #$=2;#) ? #$=3;# -> A #$=4;#
		rule #$=1;# (#$=2;#) #$=3;# -> C #$=4;#
		rule #$=1;# ( #$=2;# ( #$=3;# ) #$=4;# ) #$=5;# -> D #$=6;#
		rule #$=1;# ( #$=2;# [b] #$=3;# ) #$=4;# -> C #$=5;#
		rule #$=1;# ( #$=2;# ( #$=3;# [b] #$=4;# ) #$=5;# ) #$=6;# -> D #$=7;#
		rule #$=1;# ( #$=2;# [c] #$=3;# [d] #$=4;# ) #$=5;# -> C #$=6;#
		rule #$=1;# [e] #$=2;# * #$=3;# -> C #$=4;#
		rule #$=1;# (#$=1;# [e] #$=2;#) * #$=3;# -> A #$=4;#
		rule #$=1;# [f] #$=2;# + #$=3;# -> C #$=4;#
		rule #$=1;# (#$=1;# [f] #$=2;#) + #$=3;# -> A #$=4;#
		rule #$=1;# { #$=2;# (#$=3;# [g] #$=4;# "a" #$=5;#) #$=6;# ( #$=7;# [h] #$=8;# "b" #$=9;#) #$=10;# }* #$=11;# -> C #$=12;#
		rule #$=1;# { #$=2;# [g] #$=3;# (#$=4;# [h] #$=5;#) }+ #$=6;# -> C #$=7;#
		rule #$=1;# { #$=2;# [g] #$=3;# [h] #$=4;# }* #$=5;# -> C #$=6;#
		rule #$=1;# { #$=2;# [i] #$=3;# [j] #$=4;# }+ #$=5;# -> C #$=6;#
		rule #$=1;# [k] #$=2;# | #$=3;# [l] #$=4;# -> C #$=5;#
		rule #$=1;# (#$=2;# [k] #$=3;#) | (#$=4;# [l] #$=5;#) #$=6;# -> A #$=7;#
		rule #$=1;# [m] #$=2;# | #$=3;# [n] #$=4;# | #$=5;# [o] #$=6;#	-> C #$=7;#
		rule #$=1;# ( #$=2;# [m] #$=3;# ) #$=4;# | #$=5;# ( #$=6;# [n] #$=7;#) #$=8;# | #$=9;# ( #$=10;# [o] #$=11;# ) #$=12;# -> A #$=13;#
		rule #$=1;# < #$=2;# [p] #$=3;# , #$=4;# [q] #$=5;# > #$=6;# -> C #$=7;#
		rule #$=1;# < #$=2;# [r] #$=3;# , #$=4;# [s] #$=5;# , #$=6;# [t] #$=7;# > #$=8;# -> C #$=9;#
		rule #$=1;# ( #$=2;# #$=3;# => [u]) #$=6;# -> C #$=7;#
		rule #$=1;# ( #$=2;# [v] #$=3;# => [w]) #$=6;# -> C #$=7;#
		rule #$=1;# ( #$=2;# [x] #$=3;# [y] #$=6;# => [z]) #$=7;# -> C #$=8;#
		rule #$=1;# ([A] -> [B]) #$=2;# -> C #$=3;#
		rule #$=1;# func1 #$=2;# ( #$=3;# ) #$=4;# -> C #$=5;#
		rule #$=1;# func2 #$=2;# ( #$=3;# [C] #$=4;# ) #$=5;# -> C #$=6;#
		rule #$=1;# func3 #$=2;# ( #$=3;# [D] #$=4;# , #$=5;# [E] #$=6;# ) #$=7;# -> C #$=8;#
