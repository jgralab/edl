%%%
 %% Section 3.10.1: Literals
 %%
 %% @author Martin Bravenboer <martin.bravenboer@gmail.com>
 %%%
module grammar/java-literals/IntegerLiterals
exports
  sorts
    IntLiteral
    DeciLiteral
    HexaLiteral
    OctaLiteral
    DeciNumeral
    HexaNumeral
    OctaNumeral

  context-free syntax
    DeciLiteral -> IntLiteral {cons("Deci"),definedAs("DeciLiteral -> IntLiteral {cons(\"Deci\")}")}
    HexaLiteral -> IntLiteral {cons("Hexa"),definedAs("HexaLiteral -> IntLiteral {cons(\"Hexa\")}")}
    OctaLiteral -> IntLiteral {cons("Octa"),definedAs("OctaLiteral -> IntLiteral {cons(\"Octa\")}")}

  lexical syntax
    DeciNumeral [lL]? -> DeciLiteral {definedAs("DeciNumeral [lL]? -> DeciLiteral")}
    HexaNumeral [lL]? -> HexaLiteral {definedAs("HexaNumeral [lL]? -> HexaLiteral")}
    OctaNumeral [lL]? -> OctaLiteral {definedAs("OctaNumeral [lL]? -> OctaLiteral")}

    "0" -> DeciNumeral {definedAs("\"0\" -> DeciNumeral")}
    [1-9][0-9]*  -> DeciNumeral {definedAs("[1-9][0-9]* -> DeciNumeral")}
    [0][xX] [0-9a-fA-F]+ -> HexaNumeral {definedAs("[0][xX] [0-9a-fA-F]+ -> HexaNumeral")}
    [0]     [0-7]+       -> OctaNumeral {definedAs("[0] [0-7]+ -> OctaNumeral")}

  lexical restrictions
    DeciNumeral -/- [0-9\.fFdD]
    HexaNumeral -/- [0-9a-fA-F]
    OctaNumeral -/- [0-7]

    DeciLiteral -/- [lL]
    HexaLiteral -/- [lL]
    OctaLiteral -/- [lL]
